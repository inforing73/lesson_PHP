<?php

$text = '"Конструкция" \'foreach\' предоставляет простой способ перебора массивов. Foreach работает только с массивами и объектами и будет генерировать ошибку при попытке использования с переменными других типов или неинициализированными переменными. Существует два вида синтаксиса:

foreach (array_expression as $value)
    statement
foreach (array_expression as $key => $value)
    statement
Первый цикл перебирает массив, задаваемый с помощью array_expression. На каждой итерации значение текущего элемента присваивается переменной $value и внутренний указатель массива увеличивается на единицу (таким образом, на следующей итерации цикла работа будет происходить со следующим элементом).

Второй цикл дополнительно присвоит ключ текущего элемента переменной $key на каждой итерации.

Возможно настроить итераторы объектов.

Замечание:

В PHP 5, когда оператор foreach "начинает" исполнение, внутренний указатель массива автоматически устанавливается на первый его элемент. Это означает, что нет необходимости вызывать функцию reset() перед использованием цикла foreach.

Поскольку в PHP 5 foreach полагается на внутренний указатель массива, его изменение внутри цикла может привести к непредсказуемому поведению.

В PHP 7 foreach не использует внутренний указатель массива.';
$arr = preg_split("/[\s,=<>.!\"\'?()0-9]+/", $text, 0, PREG_SPLIT_NO_EMPTY);
$numberOfWords = count($arr);

function numberOfRepetitions (array $arr) {

    foreach (array_count_values($arr) as $key => $value) {
        $number = substr($value, -1);
        $ending = 'раз';
        if ($number > 1 && $number < 5)
            $ending .= 'а';

        echo "Слово \"$key\" встречается в тексте \"$value\" $ending.",PHP_EOL;
    }
}

echo "Общее количество слов: {$numberOfWords}",PHP_EOL;
numberOfRepetitions($arr);
